[package]
name = "tauri-app"
version = "0.1.0"
description = "A Tauri App"
authors = ["you"]
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
name = "tauri_app_lib"
crate-type = ["lib", "cdylib", "staticlib"]

[build-dependencies]
tauri-build = { version = "2.0.1", features = [] }

[dependencies]
tauri = { version = "2.0.2", features = ["unstable"] }
tauri-plugin-shell = "2.0.1"
serde = { version = "1", features = ["derive"] }
serde_json = "1"
bitflags = "2.6.0"
log = "0.4.22"
sysinfo = "0.32.0"
rayon = "1.10.0"
lazy_static = { version = "1.5.0", features = [] }
env_logger = "0.11.5"
simple_logger = "5.0.0"
rust-i18n = "3"
regex = "1"
# `bundled` causes us to automatically compile and link in an up to date
# version of SQLite for you. This avoids many common build issues, and
# avoids depending on the version of SQLite on the users system (or your
# system), which may be old or missing. It's the right choice for most
# programs that control their own SQLite databases.
#
# That said, it's not ideal for all scenarios and in particular, generic
# libraries built around `rusqlite` should probably not enable it, which
# is why it is not a default feature -- it could become hard to disable.
rusqlite = { version = "0.32.0", features = ["bundled"] }

[target.'cfg(windows)'.dependencies]
winapi = { version = "0.3.9", features = ["winuser", "winnt", "winbase", "processthreadsapi", "memoryapi", "handleapi", "minwindef", "basetsd", "consoleapi"] }

[dependencies.windows]
version = "0.58.0"
features = [
    "Data_Xml_Dom",
    "Win32_Foundation",
    "Win32_Security",
    "Win32_System_Threading",
    "Win32_UI_WindowsAndMessaging",
]


